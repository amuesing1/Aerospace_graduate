(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     14081,        297]
NotebookOptionsPosition[     12393,        262]
NotebookOutlinePosition[     13278,        290]
CellTagsIndexPosition[     13235,        287]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
The following  modules compute the stiffness matrix, consistent node body \
forces,
and corner stresses of the 4-node bilinear iso-P quad in plane stress.\
\>", "Text",
 CellFrame->True,
 CellMargins->{{12, 77}, {Inherited, Inherited}},
 CellLabelMargins->{{7, Inherited}, {Inherited, Inherited}},
 ImageRegion->{{0, 1}, {0, 1}},
 Background->RGBColor[
  1, 1, 0],ExpressionUUID->"385c3ed8-20a7-41dc-99f9-9877163a3f0c"],

Cell[TextData[{
 "Quad4IsoPMembraneStiffness[ncoor_,Emat_,th_,options_]:= \n  \
Module[{i,k,p=2,numer=False,h=th,qcoor,c,w,Nf,\n    \
dNx,dNy,Jdet,Be,Ke=Table[0,{8},{8}]},  \n  If [Length[options]==2, \
{numer,p}=options, {numer}=options];\n  If [p<1||p>4, Print[\"p out of \
range\"]; Return[Null]];\n  For [k=1, k<=p*p, k++,  \n       {qcoor,w}= \
QuadGaussRuleInfo[{p,numer},k];\n       \
{Nf,dNx,dNy,Jdet}=Quad4IsoPShapeFunDer[ncoor,qcoor];\n        If \
[Length[th]==4, h=th.Nf]; c=w*Jdet*h;\n        Be={Flatten[Table[{dNx[[i]],   \
    0},{i,4}]],\n            Flatten[Table[{0,       dNy[[i]]},{i,4}]],\n     \
       Flatten[Table[{dNy[[i]],dNx[[i]]},{i,4}]]}; \n        \
Ke+=Simplify[c*Transpose[Be].(Emat.Be)];   \n      ]; Return[Simplify[Ke]]\n  \
 ];\n   \nQuad4IsoPMembraneBodyForces[ncoor_,rho_,th_,options_,bfor_]:= \n  \
Module[{i,k,p=2,numer=False,h=th,\n    \
bx,by,bx1,by1,bx2,by2,bx3,by3,bx4,by4,bxc,byc,qcoor,\n    \
c,w,Nf,dNx,dNy,Jdet,B,qctab,fe=Table[0,{8}]}, \n  If [Length[options]==2, \
{numer,p}=options, {numer}=options]; \n  If \
[Length[bfor]==2,{bx,by}=bfor;bx1=bx2=bx3=bx4=bx;by1=by2=by3=by4=by];\n  If \
[Length[bfor]==4,{{bx1,by1},{bx2,by2},{bx3,by3},{bx4,by4}}=bfor];\n  If \
[p<1||p>4, Print[\"p out of range\"]; Return[Null]];\n  \
bxc={bx1,bx2,bx3,bx4}; byc={by1,by2,by3,by4}; \n  For [k=1, k<=p*p, k++,  \n  \
     {qcoor,w}= QuadGaussRuleInfo[{p,numer},k];\n       \
{Nf,dNx,dNy,Jdet}=Quad4IsoPShapeFunDer[ncoor,qcoor];\n       bx=Nf.bxc; \
by=Nf.byc; If [Length[th]==4, h=th.Nf];\n       c=w*Jdet*h; \n       \
bk=Flatten[Table[{Nf[[i]]*bx,Nf[[i]]*by},{i,4}]];\n       fe+=c*bk;   \n      \
]; Return[fe]\n   ];\n  \n\
Quad4IsoPMembraneStresses[ncoor_,Emat_,th_,options_,udis_]:= \n  \
Module[{i,k,numer=False,qcoor,Nf,\n    \
dNx,dNy,Jdet,Be,qctab,ue=udis,sige=Table[0,{4},{3}]},  \n  \
qctab={{-1,-1},{1,-1},{1,1},{-1,1}}; \n  numer=options[[1]]; \n  If \
[Length[udis]==4, ue=Flatten[udis]];\n  For [k=1, k<=Length[sige], k++, \n    \
   qcoor=qctab[[k]]; If [numer, qcoor=N[qcoor]]; \n       \
{Nf,dNx,dNy,Jdet}=Quad4IsoPShapeFunDer[ncoor,qcoor];\n        Be={ \
Flatten[Table[{dNx[[i]],       0},{i,4}]],\n            Flatten[Table[{0,     \
  dNy[[i]]},{i,4}]],\n            Flatten[Table[{dNy[[i]],dNx[[i]]},{i,4}]]}; \
\n        sige[[k]]=Emat.(Be.ue);   \n      ]; Return[sige]\n   ];\n   \n\
Quad4IsoPShapeFunDer[ncoor_,qcoor_]:= Module[\n  \
{Nf,dNx,dNy,dN\[Xi],dN\[Eta],i,J11,J12,J21,J22,Jdet,\[Xi],\[Eta],x,y},\n  {\
\[Xi],\[Eta]}=qcoor; \n   Nf={(1-\[Xi])*(1-\[Eta]),(1+\[Xi])*(1-\[Eta]),(1+\
\[Xi])*(1+\[Eta]),(1-\[Xi])*(1+\[Eta])}/4;\n   dN\[Xi] ={-(1-\[Eta]), (1-\
\[Eta]),(1+\[Eta]),-(1+\[Eta])}/4;\n   dN\[Eta]= {-(1-\[Xi]),-(1+\[Xi]),(1+\
\[Xi]), (1-\[Xi])}/4;\n   x=Table[ncoor[[i,1]],{i,4}]; \
y=Table[ncoor[[i,2]],{i,4}];\n   J11=dN\[Xi].x; J12=dN\[Xi].y; \
J21=dN\[Eta].x; J22=dN\[Eta].y;\n   Jdet=Simplify[J11*J22-J12*J21];\n   dNx= \
( J22*dN\[Xi]-J12*dN\[Eta])/Jdet;  dNx=Simplify[dNx];\n   dNy= \
(-J21*dN\[Xi]+J11*dN\[Eta])/Jdet;  dNy=Simplify[dNy];\n   \
Return[{Nf,dNx,dNy,Jdet}]\n];\n\nQuadGaussRuleInfo[{rule_,numer_},point_]:= \
Module[\n {\[Xi],\[Eta],p1,p2,i,j,w1,w2,m,info={{Null,Null},0}},\n  If \
[Length[rule]==2,  {p1,p2}=rule, p1=p2=rule];\n  If [p1<0, \
Return[QuadNonProductGaussRuleInfo[\n      {-p1,numer},point]]];\n  If \
[Length[point]==2, {i,j}=point, m=point; \n      j=Floor[(m-1)/p1]+1; \
i=m-p1*(j-1) ];\n  {\[Xi],w1}=  LineGaussRuleInfo[{p1,numer},i];\n  \
{\[Eta],w2}=  LineGaussRuleInfo[{p2,numer},j];\n  \
info={{\[Xi],\[Eta]},w1*w2};\n  If [numer, Return[N[info]], \
Return[Simplify[info]]];\n]; \n \nLineGaussRuleInfo[{rule_,numer_},point_]:= \
Module[\n  {g2={-1,1}/Sqrt[3],w3={5/9,8/9,5/9}, \n   \
g3={-Sqrt[3/5],0,Sqrt[3/5]}, \n   w4={(1/2)-Sqrt[5/6]/6, (1/2)+Sqrt[5/6]/6,\n \
      (1/2)+Sqrt[5/6]/6, (1/2)-Sqrt[5/6]/6},\n   \
g4={-Sqrt[(3+2*Sqrt[6/5])/7],-Sqrt[(3-2*Sqrt[6/5])/7],\n        \
Sqrt[(3-2*Sqrt[6/5])/7], Sqrt[(3+2*Sqrt[6/5])/7]},\n   \
g5={-Sqrt[5+2*Sqrt[10/7]],-Sqrt[5-2*Sqrt[10/7]],0, \n        \
Sqrt[5-2*Sqrt[10/7]], Sqrt[5+2*Sqrt[10/7]]}/3,\n   \
w5={322-13*Sqrt[70],322+13*Sqrt[70],512,\n       \
322+13*Sqrt[70],322-13*Sqrt[70]}/900,\n   i=point,p=rule,info={Null,0}}, \n  \
If [p==1, info={0,2}];\n  If [p==2, info={g2[[i]],1}];\n  If [p==3, \
info={g3[[i]],w3[[i]]}]; \n  If [p==4, info={g4[[i]],w4[[i]]}];\n  If [p==5, \
info={g5[[i]],w5[[i]]}];\n  If [numer, Return[N[info]], \
Return[Simplify[info]]];\n]; \n \n",
 StyleBox["ClearAll[Em,\[Nu],a,b,h,p,numer];\nEm=96; \[Nu]=1/3; h=1; a=6; \
b=6;\nEmat=Em/(1-\[Nu]^2)*{{1,\[Nu],0},{\[Nu],1,0},{0,0,(1-\[Nu])/2}};\n\
Print[\"Emat=\",Emat//MatrixForm];\nncoor={{0,0},{a,0},{a,b},{0,b}}; p=2; \
numer=False;\nKe=Quad4IsoPMembraneStiffness[ncoor,Emat,h,{numer,p}];\n\
v={1,-1,1,0,0,-1,0,0}; Print[\"Check v=\",v,\"  Ke.v=\",Ke.v//InputForm];\n(* \
Result should be \[InvisibleSpace]{18,-6,18,6,-18,-42,-18,42}*)\n\
v={1,-1,1,0,0,0,0,-1}; Print[\"Check v=\",v,\"  Ke.v=\",Ke.v//InputForm];\n(* \
Result should be all zeros  *)\nKe=Simplify[Chop[Ke]];  \
Print[\"Ke=\",Ke//MatrixForm]; \nPrint[\"Eigenvalues of \
Ke=\",Eigenvalues[Ke]]; (* should give 3 zeros *)\n\
fe=Quad4IsoPMembraneBodyForces[ncoor,rho,h,{False},\n      \
{{0,0},{0,0},{0,gy},{0,0}}]; ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["fe=Simplify[fe]; ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["\nPrint[\"fe=\",fe]; (* should give ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["\[InvisibleSpace]{0,gy,0,2*gy,0,4*gy,0,2*gy} *)",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["\nsige=Quad4IsoPMembraneStresses[ncoor,\n     \
Emat,h,{False},{{0,0},{1,0},{1,0},{0,0}}];\nPrint[\"sige=\",sige];(* result: ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["\[InvisibleSpace]{{18,6,0},{18,6,0},{18,6,0},{18,6,0}}*)",
  FontColor->RGBColor[0, 0, 1]]
}], "Input",
 CellFrame->True,
 CellMargins->{{12, 77}, {Inherited, Inherited}},
 CellLabelMargins->{{7, Inherited}, {Inherited, Inherited}},
 ImageRegion->{{0, 1}, {0, 1}},
 Background->RGBColor[
  0, 1, 0],ExpressionUUID->"b4296b4d-68fc-4a24-874c-92a50db1f560"],

Cell["\<\
=== 2:1 rectangular element test  with 2x2 Gauss rule (p=2), symbolic inputs\
\>", "Text",
 CellFrame->True,
 CellMargins->{{12, 77}, {Inherited, Inherited}},
 CellLabelMargins->{{7, Inherited}, {Inherited, Inherited}},
 ImageRegion->{{0, 1}, {0, 1}},
 Background->RGBColor[
  1, 1, 0],ExpressionUUID->"f94aeaa6-75d9-41e7-9a97-8c4b1b11028c"],

Cell["\<\
ClearAll[Em,\[Nu],a,b,e,h,p,numer];  h=1;
Em=96; \[Nu]=1/3;  (* isotropic material *) 
Emat=Em/(1-\[Nu]^2)*{{1,\[Nu],0},{\[Nu],1,0},{0,0,(1-\[Nu])/2}};
Print[\"Emat=\",Emat//MatrixForm];
ncoor={{0,0},{2*a,0},{2*a,a},{0,a}}; (* 2:1 rectangular geometry *)
p=2; (* 2 x 2 Gauss rule *) numer=False; (* exact symbolic arithmetic *)  
Ke=Quad4IsoPMembraneStiffness[ncoor,Emat,h,{numer,p}];
Ke=Simplify[Chop[Ke]];  Print[\"Ke=\",Ke//MatrixForm]; 
(*Print[\"Eigenvalues of Ke=\",Chop[Eigenvalues[N[Ke]],.0000001]];*)
\
\>", "Input",
 CellFrame->True,
 CellMargins->{{12, 77}, {Inherited, Inherited}},
 CellLabelMargins->{{7, Inherited}, {Inherited, Inherited}},
 ImageRegion->{{0, 1}, {0, 1}},
 Background->RGBColor[
  0, 1, 0],ExpressionUUID->"75e53ade-c15b-41d2-b85a-641d3b97bfbd"],

Cell["\<\
=== 2:1 rectangular element test for Ch 23, example 1. 
Four Gauss rules: p=1,2,3,4. Stiffness should be same for p >=2\
\>", "Text",
 CellFrame->True,
 CellMargins->{{12, 77}, {Inherited, Inherited}},
 CellLabelMargins->{{7, Inherited}, {Inherited, Inherited}},
 ImageRegion->{{0, 1}, {0, 1}},
 Background->RGBColor[
  1, 1, 0],ExpressionUUID->"dedc3a0f-eac6-435e-be2b-64a5e80a73c2"],

Cell["\<\
ClearAll[Em,nu,a,b,h];  Em=48; h=1; a=4; b=2; \[Nu]=0;
ncoor={{0,0},{a,0},{a,b},{0,b}};
Emat=Em/(1-\[Nu]^2)*{{1,\[Nu],0},{\[Nu],1,0},{0,0,(1-\[Nu])/2}};
For [p=1, p<=4, p++,
      Ke= Quad4IsoPMembraneStiffness[ncoor,Emat,h,{True,p}];
      Print[\"Gauss integration rule: \",p,\" x \",p]; 
      Print[\"Ke=\",Chop[Ke]//MatrixForm];
      Print[\"Eigenvalues of Ke=\",Chop[Eigenvalues[N[Ke]]]]  
    ]; \
\>", "Input",
 CellFrame->True,
 CellMargins->{{12, 77}, {Inherited, Inherited}},
 CellLabelMargins->{{7, Inherited}, {Inherited, Inherited}},
 ImageRegion->{{0, 1}, {0, 1}},
 Background->RGBColor[
  0, 1, 0],ExpressionUUID->"d0c18eb9-5630-441f-ac8f-8d8e2ea066d3"],

Cell["\<\
Trapezoid element test with p=1,2,3,4 for Ch 23 example 2.
Stiffness matrix should keep on changing, but not much beyond p=2.\
\>", "Text",
 CellFrame->True,
 CellMargins->{{12, 77}, {Inherited, Inherited}},
 CellLabelMargins->{{7, Inherited}, {Inherited, Inherited}},
 ImageRegion->{{0, 1}, {0, 1}},
 Background->RGBColor[
  1, 1, 0],ExpressionUUID->"5620e328-b4e7-4cfb-8950-0af836aaebfa"],

Cell["\<\
ClearAll[Em,\[Nu],h,a,p];  h=1; 
Em=48*63*13*107; \[Nu]=1/3;   
Emat=Em/(1-\[Nu]^2)*{{1,\[Nu],0},{\[Nu],1,0},{0,0,(1-\[Nu])/2}};
ncoor={{0,0},{2*a,0},{a,a},{0,a}}; 
For [p=1,p<=4,p++,
    Ke=Quad4IsoPMembraneStiffness[ncoor,Emat,h,{True,p}];
    Ke=Rationalize[Ke,0.0000001]; Print[\"Ke=\",Ke//MatrixForm];
    Print[\"Eigenvalues of Ke=\",Chop[Eigenvalues[N[Ke]],.0000001]] 
    ];\
\>", "Input",
 CellFrame->True,
 CellMargins->{{12, 77}, {Inherited, Inherited}},
 CellLabelMargins->{{7, Inherited}, {Inherited, Inherited}},
 ImageRegion->{{0, 1}, {0, 1}},
 Background->RGBColor[
  0, 1, 0],ExpressionUUID->"339a91f1-933d-4e45-bbf0-560734970d6d"],

Cell["\<\
=== Test shape function derivatives - useful when first programming this \
module. 
2a x 2b rectangle, symbolic displacements for constant strains.
Answers should be exactly the strains exx, eyy, and  2 exy\
\>", "Text",
 CellFrame->True,
 CellMargins->{{12, 77}, {Inherited, Inherited}},
 CellLabelMargins->{{7, Inherited}, {Inherited, Inherited}},
 ImageRegion->{{0, 1}, {0, 1}},
 Background->RGBColor[
  1, 1, 0],ExpressionUUID->"937408c8-121e-4dfe-b65e-f8ef00c315fa"],

Cell[TextData[{
 "Quad4IsoPShapeFunDer[ncoor_,qcoor_]:= Module[\n  {Nf,dNx,dNy,dN\[Xi],dN\
\[Eta],i,J11,J12,J21,J22,Jdet,\[Xi],\[Eta],x,y},\n  {\[Xi],\[Eta]}=qcoor; \n  \
 Nf={(1-\[Xi])*(1-\[Eta]),(1+\[Xi])*(1-\[Eta]),(1+\[Xi])*(1+\[Eta]),(1-\[Xi])*\
(1+\[Eta])}/4;\n   dN\[Xi] ={-(1-\[Eta]), \
(1-\[Eta]),(1+\[Eta]),-(1+\[Eta])}/4;\n   dN\[Eta]= \
{-(1-\[Xi]),-(1+\[Xi]),(1+\[Xi]), (1-\[Xi])}/4;\n   \
x=Table[ncoor[[i,1]],{i,4}]; y=Table[ncoor[[i,2]],{i,4}];\n   J11=dN\[Xi].x; \
J12=dN\[Xi].y; J21=dN\[Eta].x; J22=dN\[Eta].y;\n   \
Jdet=Simplify[J11*J22-J12*J21];\n   dNx= ( J22*dN\[Xi]-J12*dN\[Eta])/Jdet;  \
dNx=Simplify[dNx];\n   dNy= (-J21*dN\[Xi]+J11*dN\[Eta])/Jdet;  \
dNy=Simplify[dNy];\n   Return[{Nf,dNx,dNy,Jdet}]\n];\n\n",
 StyleBox["ClearAll[a,b,exx,eyy,exy,\[Xi],\[Eta]]; \n\
ncoor={{0,0},{2*a,-b},{a,b},{0,2*b}};  qcoor={\[Xi],\[Eta]};\n\
{Nf,dNx,dNy,Jdet}=Quad4IsoPShapeFunDer[ncoor,qcoor];\nB={ \
Flatten[Table[{dNx[[i]],       0},{i,4}]],\n    Flatten[Table[{0,       \
dNy[[i]]},{i,4}]],\n    Flatten[Table[{dNy[[i]],dNx[[i]]},{i,4}]]};\n\
{{x1,y1},{x2,y2},{x3,y3},{x4,y4}}=ncoor;\nuxx=exx*{x1, 0,x2, 0,x3, 0,x4, 0};\n\
uyy=eyy*{ 0,y1, 0,y2, 0,y3, 0,y4};\nuxy=exy*{y1,x1,y2,x2,y3,x3,y4,x4};\n\
ue=uxx+uyy+uxy;\nPrint[Simplify[B.ue]//MatrixForm]; ",
  FontColor->RGBColor[0, 0, 1]],
 "  \n    "
}], "Input",
 CellFrame->True,
 CellMargins->{{12, 77}, {Inherited, Inherited}},
 CellLabelMargins->{{7, Inherited}, {Inherited, Inherited}},
 ImageRegion->{{0, 1}, {0, 1}},
 Background->RGBColor[
  0, 1, 0],ExpressionUUID->"0821f3ca-0a2d-4e8c-b7ee-9fdbb405ee9f"]
},
WindowToolbars->{},
CellGrouping->Manual,
WindowSize->{1920, 1154},
WindowMargins->{{-1920, Automatic}, {252, Automatic}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
ShowCellLabel->True,
ShowCellTags->False,
Magnification->1.5,
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb",
PrivateNotebookOptions -> {"ColorPalette" -> {RGBColor, -1}},
RenderingOptions -> {"ObjectDithering" -> True},
RenderingOptions -> {"RasterDithering" -> False},
MacintoshSystemPageSetup -> \
"00<0001804P000000]P2:?oQon82n@960dL5:0?l0080001804P000000]P2:001\n\
0000I00000400`<300000BL?00400@00000000000000060801T1T00000000000\n\
00000000000000000000000000000000"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 429, 10, 116, "Text",ExpressionUUID->"385c3ed8-20a7-41dc-99f9-9877163a3f0c"],
Cell[990, 32, 6047, 98, 3351, "Input",ExpressionUUID->"b4296b4d-68fc-4a24-874c-92a50db1f560"],
Cell[7040, 132, 351, 8, 155, "Text",ExpressionUUID->"f94aeaa6-75d9-41e7-9a97-8c4b1b11028c"],
Cell[7394, 142, 786, 17, 544, "Input",ExpressionUUID->"75e53ade-c15b-41d2-b85a-641d3b97bfbd"],
Cell[8183, 161, 394, 9, 209, "Text",ExpressionUUID->"dedc3a0f-eac6-435e-be2b-64a5e80a73c2"],
Cell[8580, 172, 680, 16, 499, "Input",ExpressionUUID->"d0c18eb9-5630-441f-ac8f-8d8e2ea066d3"],
Cell[9263, 190, 400, 9, 209, "Text",ExpressionUUID->"5620e328-b4e7-4cfb-8950-0af836aaebfa"],
Cell[9666, 201, 658, 16, 499, "Input",ExpressionUUID->"339a91f1-933d-4e45-bbf0-560734970d6d"],
Cell[10327, 219, 481, 11, 263, "Text",ExpressionUUID->"937408c8-121e-4dfe-b65e-f8ef00c315fa"],
Cell[10811, 232, 1578, 28, 1309, "Input",ExpressionUUID->"0821f3ca-0a2d-4e8c-b7ee-9fdbb405ee9f"]
}
]
*)

(* End of internal cache information *)

